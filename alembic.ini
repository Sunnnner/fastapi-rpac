# A generic, single database configuration.

[alembic]
# 迁移脚本位置 - 使用绝对路径以避免路径问题
script_location = %(here)s/migrations

# 生产环境使用时间戳标记迁移文件，便于排序和识别
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# 项目根目录
prepend_sys_path = .

# 使用 UTC 时区记录迁移时间
timezone = UTC

# 限制 slug 长度，提高可读性
truncate_slug_length = 40

# 生产环境设置为 true，确保在运行 revision 命令时也运行环境
revision_environment = true

# 禁止使用无源文件的 .pyc/.pyo 作为迁移脚本
sourceless = false

# 使用操作系统路径分隔符
version_path_separator = os


# 默认不递归搜索迁移脚本
recursive_version_locations = false


# 输出编码
output_encoding = utf-8

; 此处已使用环境变量设置
sqlalchemy.url = driver://user:pass@localhost/dbname

[post_write_hooks]
# 代码格式化和检查钩子
;hooks = black,ruff
;black.type = console_scripts
;black.entrypoint = black
;black.options = -l 88 REVISION_SCRIPT_FILENAME
;
;ruff.type = exec
;ruff.executable = ruff
;ruff.options = check REVISION_SCRIPT_FILENAME

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console,file

[formatters]
keys = generic,detailed

[logger_root]
level = WARNING
handlers = console,file
qualname =

[logger_sqlalchemy]
level = WARNING
handlers = file
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers = file
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = WARNING
formatter = generic

[handler_file]
class = FileHandler
args = (os.path.join('logs', 'alembic.log'), 'a')
level = INFO
formatter = detailed

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

[formatter_detailed]
format = %(asctime)s - %(levelname)s - %(name)s - %(message)s
datefmt = %Y-%m-%d %H:%M:%S